import kivy

kivy.require('1.9.1')

from kivy.uix.gridlayout import GridLayout
from kivy.config import Config
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.textinput import TextInput
from kivy.app import App
from kivy.lang import Builder
from kivy.uix.button import Button
from kivy.properties import NumericProperty, AliasProperty, ObjectProperty
from kivy.event import EventDispatcher
from kivy.uix.popup import Popup
from kivy.uix.label import Label
from kivy.graphics import Color, Rectangle
"""

"""
class Sudoku(GridLayout):
    def __init__(self):
        super(Sudoku, self).__init__()
        game = [[3, 0, 7, 1, 0, 0, 0, 6, 5],
                [5, 0, 6, 9, 2, 0, 0, 1, 0],
                [0, 0, 9, 0, 0, 3, 0, 8, 0],
                [0, 9, 0, 3, 0, 8, 0, 0, 7],
                [0, 4, 0, 0, 0, 0, 0, 3, 0],
                [1, 0, 0, 4, 0, 5, 0, 2, 0],
                [0, 6, 0, 5, 0, 0, 3, 0, 0],
                [0, 3, 0, 0, 9, 6, 2, 0, 1],
                [2, 5, 0, 0, 0, 1, 6, 0, 4]]
        solu = [[3, 2, 7, 1, 8, 4, 9, 6, 5],
                [5, 8, 6, 9, 2, 7, 4, 1, 3],
                [4, 1, 9, 6, 5, 3, 7, 8, 2],
                [6, 9, 2, 3, 1, 8, 5, 4, 7],
                [8, 4, 5, 2, 7, 9, 1, 3, 6],
                [1, 7, 3, 4, 6, 5, 8, 2, 9],
                [9, 6, 1, 5, 4, 2, 3, 7, 8],
                [7, 3, 4, 8, 9, 6, 2, 5, 1],
                [2, 5, 8, 7, 3, 1, 6, 9, 4]]
        self.raw = 10
        self.cols = 9
        textgrid = []
        Numberzero = 0
        for i in game :
            Numberzero += i.count(0)
        for i in range (0,Numberzero) :
            textgrid.append(TextInput(multiline=False))
        Counter= 0
        for k in game:
            for i in k :
                if i != 0:
                    self.add_widget(Label(text=str(i)))
                if i == 0:
                    self.add_widget(textgrid[Counter])
                    Counter +=1
        button1= Button(text='Entrer')
        self.add_widget(button1)
        def affichesolution(w):
            gridsolution = GridLayout(cols=9)
            counter=0
            for k in range(0,9):
                for l in range (0,9) :
                    if game[k][l] != 0:
                        gridsolution.add_widget(Label(text='[b]'+str(solu[k][l])+'[/b]', markup=True))
                    if game[k][l] == 0:
                        if textgrid[counter].text != str(solu[k][l]):
                            gridsolution.add_widget(Label(text='[b][color=ff0000]'+str(solu[k][l])+'[/color][/b]', markup=True))
                        else :
                            gridsolution.add_widget(Label(text='[b][color=00ff00]'+str(solu[k][l])+'[/color][/b]', markup=True))
                        counter +=1
            popupsolution = Popup(title='solution', content=gridsolution,)
            popupsolution.open()

        button1.bind(on_press=affichesolution)

class SudokuGame(App):
    def build(self) :
        return Sudoku()

Config.set('graphics', 'width', '500')
Config.set('graphics', 'height', '500')

SudokuGame().run()
